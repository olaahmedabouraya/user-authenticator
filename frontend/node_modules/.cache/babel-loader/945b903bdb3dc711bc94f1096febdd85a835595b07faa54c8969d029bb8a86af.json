{"ast":null,"code":"var _jsxFileName = \"/home/ola/user-authentication-app-ts/src/components/sign-up-form/sign-up-form.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport environment from \"../../environments/environment\";\nimport MessagesSuccess from \"../../utils/messages-success\";\nimport MessagesError from \"../../utils/messages-error\";\nimport './sign-up-form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignupForm = () => {\n  _s();\n  // Using the FormData interface to type the state\n  const [formData, setFormData] = useState({\n    email: \"\",\n    name: \"\",\n    password: \"\"\n  });\n  const [errors, setErrors] = useState({});\n\n  // Typing the event in handleChange\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Typing the event in handleSubmit\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.post(`${environment.API_URL}/api/signup`, formData);\n      alert(MessagesSuccess.SUCCESSFUL_SIGNUP);\n    } catch (err) {\n      alert(MessagesError.ERROR_SIGNUP);\n    }\n  };\n  const validateField = (name, value) => {\n    let error = \"\";\n    if (name === \"name\" && value.trim().length < 3) {\n      error = \"Name must be at least 3 characters\";\n    } else if (name === \"email\" && !/^\\S+@\\S+\\.\\S+$/.test(value)) {\n      error = \"Invalid email format\";\n    } else if (name === \"password\" && value.length < 8) {\n      error = \"Password must be at least 8 characters\";\n    }\n    return error;\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"signup-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Name\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(SignupForm, \"CBGWAD+RbdH55xYWjOrYC5/VkMs=\");\n_c = SignupForm;\nexport default SignupForm;\nvar _c;\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"names":["React","useState","axios","environment","MessagesSuccess","MessagesError","jsxDEV","_jsxDEV","SignupForm","_s","formData","setFormData","email","name","password","errors","setErrors","handleChange","e","target","value","handleSubmit","preventDefault","post","API_URL","alert","SUCCESSFUL_SIGNUP","err","ERROR_SIGNUP","validateField","error","trim","length","test","onSubmit","className","children","type","placeholder","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ola/user-authentication-app-ts/src/components/sign-up-form/sign-up-form.tsx"],"sourcesContent":["import React, { useState, ChangeEvent, FormEvent } from \"react\";\nimport axios from \"axios\";\nimport { FormData } from \"../../interfaces/sign-up-form/form-data\";\nimport environment from \"../../environments/environment\";\nimport MessagesSuccess from \"../../utils/messages-success\";\nimport MessagesError from \"../../utils/messages-error\";\nimport './sign-up-form.css';\n\nconst SignupForm: React.FC = () => {\n  // Using the FormData interface to type the state\n  const [formData, setFormData] = useState<FormData>({\n    email: \"\",\n    name: \"\",\n    password: \"\"\n  });\n  const [errors, setErrors] = useState<Partial<FormData>>({});\n\n  // Typing the event in handleChange\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  // Typing the event in handleSubmit\n  const handleSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n    try {\n      await axios.post(`${environment.API_URL}/api/signup`, formData);\n      alert(MessagesSuccess.SUCCESSFUL_SIGNUP);\n    } catch (err) {\n      alert(MessagesError.ERROR_SIGNUP);\n    }\n  };\n\n  const validateField = (name: string, value: string) => {\n    let error = \"\";\n\n    if (name === \"name\" && value.trim().length < 3) {\n      error = \"Name must be at least 3 characters\";\n    } else if (name === \"email\" && !/^\\S+@\\S+\\.\\S+$/.test(value)) {\n      error = \"Invalid email format\";\n    } else if (name === \"password\" && value.length < 8) {\n      error = \"Password must be at least 8 characters\";\n    }\n\n    return error;\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"signup-form\">\n      <input\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Name\"\n        onChange={handleChange}\n        required\n      />\n      <input\n        type=\"email\"\n        name=\"email\"\n        placeholder=\"Email\"\n        onChange={handleChange}\n        required\n      />\n      <input\n        type=\"password\"\n        name=\"password\"\n        placeholder=\"Password\"\n        onChange={handleChange}\n        required\n      />\n      <button type=\"submit\">Sign Up</button>\n    </form>\n  );\n};\n\nexport default SignupForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}