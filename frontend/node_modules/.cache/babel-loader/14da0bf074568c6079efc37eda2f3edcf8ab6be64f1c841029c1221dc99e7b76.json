{"ast":null,"code":"var _jsxFileName = \"/home/ola/user-authentication-app-ts/src/components/welcome-page/welcome-page.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport './welcome-page.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WelcomePage = ({\n  onLogout\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const handleLogout = () => {\n    // Clear the session (remove token from localStorage or any other logout process)\n    localStorage.removeItem(\"token\"); // Clear the token\n    onLogout(); // Optional: Call the onLogout prop function for any other clean-up\n\n    // Navigate to the login page after logout, with replace: true to prevent going back to welcome\n    navigate(\"/\", {\n      replace: true\n    });\n  };\n\n  // Disable back and forward buttons only on the welcome page\n  useEffect(() => {\n    // Push a new state to the history stack that prevents going back\n    if (window.location.pathname === '/welcome') {\n      window.history.pushState(null, \"\", window.location.href);\n      window.onpopstate = () => {\n        window.history.pushState(null, \"\", window.location.href);\n      };\n    }\n\n    // Cleanup on unmount\n    return () => {\n      window.onpopstate = null; // Remove the popstate listener on component unmount\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"welcome-page-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"welcome-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"paragraph-style\",\n        children: \"Welcome to the application.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(WelcomePage, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = WelcomePage;\nexport default WelcomePage;\nvar _c;\n$RefreshReg$(_c, \"WelcomePage\");","map":{"version":3,"names":["React","useEffect","useNavigate","jsxDEV","_jsxDEV","WelcomePage","onLogout","_s","navigate","handleLogout","localStorage","removeItem","replace","window","location","pathname","history","pushState","href","onpopstate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/ola/user-authentication-app-ts/src/components/welcome-page/welcome-page.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport './welcome-page.css';\n\nconst WelcomePage: React.FC<{ onLogout: () => void }> = ({ onLogout }) => {\n  const navigate = useNavigate();\n\n  const handleLogout = () => {\n    // Clear the session (remove token from localStorage or any other logout process)\n    localStorage.removeItem(\"token\"); // Clear the token\n    onLogout(); // Optional: Call the onLogout prop function for any other clean-up\n\n    // Navigate to the login page after logout, with replace: true to prevent going back to welcome\n    navigate(\"/\", { replace: true });\n  };\n\n  // Disable back and forward buttons only on the welcome page\n  useEffect(() => {\n    // Push a new state to the history stack that prevents going back\n    if (window.location.pathname === '/welcome') {\n      window.history.pushState(null, \"\", window.location.href);\n      window.onpopstate = () => {\n        window.history.pushState(null, \"\", window.location.href);\n      };\n    }\n\n    // Cleanup on unmount\n    return () => {\n      window.onpopstate = null; // Remove the popstate listener on component unmount\n    };\n  }, []);\n\n  return (\n    <div className=\"welcome-page-wrapper\">\n      <div className=\"welcome-page\">\n        <p className=\"paragraph-style\">Welcome to the application.</p>\n        <button onClick={handleLogout}>Logout</button>\n      </div>\n    </div>\n  );\n};\n\nexport default WelcomePage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,WAA+C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACxE,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAE9B,MAAMO,YAAY,GAAGA,CAAA,KAAM;IACzB;IACAC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;IAClCL,QAAQ,CAAC,CAAC,CAAC,CAAC;;IAEZ;IACAE,QAAQ,CAAC,GAAG,EAAE;MAAEI,OAAO,EAAE;IAAK,CAAC,CAAC;EAClC,CAAC;;EAED;EACAX,SAAS,CAAC,MAAM;IACd;IACA,IAAIY,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,UAAU,EAAE;MAC3CF,MAAM,CAACG,OAAO,CAACC,SAAS,CAAC,IAAI,EAAE,EAAE,EAAEJ,MAAM,CAACC,QAAQ,CAACI,IAAI,CAAC;MACxDL,MAAM,CAACM,UAAU,GAAG,MAAM;QACxBN,MAAM,CAACG,OAAO,CAACC,SAAS,CAAC,IAAI,EAAE,EAAE,EAAEJ,MAAM,CAACC,QAAQ,CAACI,IAAI,CAAC;MAC1D,CAAC;IACH;;IAEA;IACA,OAAO,MAAM;MACXL,MAAM,CAACM,UAAU,GAAG,IAAI,CAAC,CAAC;IAC5B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA;IAAKgB,SAAS,EAAC,sBAAsB;IAAAC,QAAA,eACnCjB,OAAA;MAAKgB,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BjB,OAAA;QAAGgB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAC;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC9DrB,OAAA;QAAQsB,OAAO,EAAEjB,YAAa;QAAAY,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClB,EAAA,CApCIF,WAA+C;EAAA,QAClCH,WAAW;AAAA;AAAAyB,EAAA,GADxBtB,WAA+C;AAsCrD,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}