{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nconst ProtectedRoute = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Replace history so back/forward doesn't work\n    navigate(location.pathname, {\n      replace: true\n    });\n    const handlePopState = () => {\n      // Force back to current page\n      navigate(location.pathname, {\n        replace: true\n      });\n    };\n    window.addEventListener(\"popstate\", handlePopState);\n    return () => {\n      window.removeEventListener(\"popstate\", handlePopState);\n    };\n  }, [location, navigate]);\n  return null; // no UI, it's just a logic component\n};\n_s(ProtectedRoute, \"fPjCxODVr6jVvib6o2c9VLE4s84=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["useEffect","useLocation","useNavigate","ProtectedRoute","_s","location","navigate","pathname","replace","handlePopState","window","addEventListener","removeEventListener","_c","$RefreshReg$"],"sources":["/home/ola/user-authentication-app-ts/src/guards/protected-route.tsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\n\nconst ProtectedRoute = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Replace history so back/forward doesn't work\n    navigate(location.pathname, { replace: true });\n\n    const handlePopState = () => {\n      // Force back to current page\n      navigate(location.pathname, { replace: true });\n    };\n\n    window.addEventListener(\"popstate\", handlePopState);\n    return () => {\n      window.removeEventListener(\"popstate\", handlePopState);\n    };\n  }, [location, navigate]);\n\n  return null; // no UI, it's just a logic component\n};\n\nexport default ProtectedRoute;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAE3D,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,QAAQ,GAAGJ,WAAW,CAAC,CAAC;EAC9B,MAAMK,QAAQ,GAAGJ,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd;IACAM,QAAQ,CAACD,QAAQ,CAACE,QAAQ,EAAE;MAAEC,OAAO,EAAE;IAAK,CAAC,CAAC;IAE9C,MAAMC,cAAc,GAAGA,CAAA,KAAM;MAC3B;MACAH,QAAQ,CAACD,QAAQ,CAACE,QAAQ,EAAE;QAAEC,OAAO,EAAE;MAAK,CAAC,CAAC;IAChD,CAAC;IAEDE,MAAM,CAACC,gBAAgB,CAAC,UAAU,EAAEF,cAAc,CAAC;IACnD,OAAO,MAAM;MACXC,MAAM,CAACE,mBAAmB,CAAC,UAAU,EAAEH,cAAc,CAAC;IACxD,CAAC;EACH,CAAC,EAAE,CAACJ,QAAQ,EAAEC,QAAQ,CAAC,CAAC;EAExB,OAAO,IAAI,CAAC,CAAC;AACf,CAAC;AAACF,EAAA,CApBID,cAAc;EAAA,QACDF,WAAW,EACXC,WAAW;AAAA;AAAAW,EAAA,GAFxBV,cAAc;AAsBpB,eAAeA,cAAc;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}